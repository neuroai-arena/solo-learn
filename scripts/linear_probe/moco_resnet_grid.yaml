# python main_linear.py --config-path scripts/linear_probe/ --config-name moco_resnet_grid.yaml name="mocov3_gs224_t15_ggb3-ImageNet100" ++pretrained_feature_extractor="/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/mocov3/znm3uwli/mocov3_gs224_t15_ggb3-znm3uwli-ep\=last-stp\=last.ckpt"
# python main_linear.py --config-path scripts/linear_probe/ --config-name moco_resnet_grid.yaml name="mocov3_gs224_t15_ggb1-ImageNet100" ++pretrained_feature_extractor="/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/mocov3/7fbjx70g/mocov3_gs224_t15_ggb1-7fbjx70g-ep\=last-stp\=last.ckpt" ++data.transform_kwargs.global_gaussian_blur.sigma=9.549296585513721
# python main_linear.py --config-path scripts/linear_probe/ --config-name moco_resnet_grid.yaml name="mocov3_gs224_t15_ggb3-Places365" ++pretrained_feature_extractor="/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/mocov3/znm3uwli/mocov3_gs224_t15_ggb3-znm3uwli-ep\=last-stp\=last.ckpt" ++data.transform_kwargs.global_gaussian_blur.sigma=3.183098861837907
# python main_linear.py --config-path scripts/linear_probe/ --config-name moco_resnet_grid.yaml name="mocov3_gs224_t15_ggb1_init-ImageNet100" ++pretrained_feature_extractor="/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/mocov3/0wigov03/mocov3_gs224_t15_ggb1_init-0wigov03-ep\=last-stp\=last.ckpt"
# python main_linear.py --config-path scripts/linear_probe/ --config-name moco_resnet_grid.yaml name="mocov3_gs224_t15_gbb_log_decay-ImageNet100" ++pretrained_feature_extractor="/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/mocov3/eqq56xt3/mocov3_gs224_t15_ggb_log_decay-eqq56xt3-ep=last-stp\=last.ckpt"

defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled

seed: 0
# disable hydra outputs
hydra:
  output_subdir: null
  run:
    dir: .

name: null
pretrained_feature_extractor: null

backbone:
  name: "resnet50"
method: "mocov3"
pretrain_method: "mocov3"



data:
  dataset: "imagenet100_42"
  train_path: "/pfss/mlde/workspaces/mlde_wsp_PI_Roig/shared/datasets/"
  val_path: "/pfss/mlde/workspaces/mlde_wsp_PI_Roig/shared/datasets/"
  train_backgrounds: [ 's1', 's2', 's3', 's4', 's5', 's6' ]
  val_backgrounds: [ 's7', 's8', 's9', 's10', 's11' ]
  num_workers: 8
#  transform_kwargs:
#    global_gaussian_blur:
#      sigma: 3.183098861837907
optimizer:
  name: "sgd"
  batch_size: 128
  lr: 0.1
  weight_decay: 0
  momentum: 0.9
scheduler:
  name: "warmup_cosine"
  warmup_start_lr: 0.00001
  warmup_epochs: 0
  max_epochs: 100
  interval: "epoch"
checkpoint:
  enabled: True
  dir: "/pfss/mlde/workspaces/mlde_wsp_PI_Roig/schaumloeffel/logs/ego4d/"
  frequency: 1
  save_last: True
auto_resume:
  enabled: False
early_stopping:
  enabled: False
  patience: 5
  monitor: "val_acc1"
  mode: "max"
wandb:
  enabled: True
  entity: "aaubret"
  project: "EgocentricVision"
  group: "mocov3-rn50"
  job_type: "linear_probe_grid_v2"
  offline: False


use_pre_extract_feats: False
skip_pre_extraction_of_feats: False
finetune: False

grid:
  enabled: True
#  lr: [  0.1,  0.4,  1.6,  ]
  lr: [  0.01, 0.05, 0.1, 0.2, 0.4, 0.8,  1.6, 3.2 ]
  layer_names: [ "maxpool", "layer1", "layer2", "layer3", "layer4" ]

# overwrite PL stuff
max_epochs: 100
devices: 8
sync_batchnorm: True
accelerator: "gpu"
strategy: "ddp"
precision: 32
log_every_n_steps: 50
